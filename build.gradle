plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)  // or 21
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Core Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'com.google.code.gson:gson:2.11.0'

    // For building REST APIs
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Security (optional, only if you need authentication/authorization)
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Validation (Jakarta Bean Validation API)
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Actuator (optional, for monitoring/health)
    implementation 'org.springframework.boot:spring-boot-starter-actuator'


    // Move to Jiffy
    // Webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // OAuth2 Resource Server (for JWT validation)
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // JWT support (io.jsonwebtoken)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON serialization/deserialization

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}